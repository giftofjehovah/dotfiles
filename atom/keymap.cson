# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'.platform-darwin atom-workspace':
  'cmd-n': 'advanced-open-file:toggle'

'atom-workspace, atom-workspace atom-text-editor':
  'cmd-m': 'markdown-preview-plus:toggle'

'atom-text-editor':
  'cmd-alt down': 'pane:split-down'
  'cmd-alt up': 'pane:split-up'
  'cmd-alt left': 'pane:split-left'
  'cmd-alt right': 'pane:split-right'

# 'atom-text-editor[data-grammar~="js"]:not([mini])':
#   'tab': 'emmet:expand-abbreviation-with-tab'
#
# '.pane .editor:not(.mini)':
#   'tab': 'snippets:expand'
